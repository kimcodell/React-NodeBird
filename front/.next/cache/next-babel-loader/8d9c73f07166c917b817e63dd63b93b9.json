{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uD601\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uCF54\\uB529\\\\React-Next\\\\front\\\\components\\\\PostCard.js\";\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Card, Button, Popover, Avatar } from \"antd\";\nimport { EllipsisOutlined, MessageOutlined, HeartOutlined, RetweetOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector;\n  const id = me === null || me === void 0 ? void 0 : me.id; //옵셔널 체이닝\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 42\n      }, this),\n      actions: [\n      /*#__PURE__*/\n      //jsx에서 배열 안에 값 넣을 때는 key 필수\n      _jsxDEV(RetweetOutlined, {}, \"rwtweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: propTypes.shape({\n    //shape으로 더 자세하게 정해줄 수 있음. 하위의 object도 shape으로 또 더 자세히 써줄 수 있음.\n    id: propTypes.number,\n    User: propTypes.object,\n    content: propTypes.string,\n    createdAt: propTypes.object,\n    Comments: propTypes.arrayOf(propTypes.object),\n    Images: propTypes.arrayOf(propTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/김민혁/OneDrive/바탕 화면/코딩/React-Next/front/components/PostCard.js"],"names":["React","propTypes","useSelector","Card","Button","Popover","Avatar","EllipsisOutlined","MessageOutlined","HeartOutlined","RetweetOutlined","PostCard","post","me","id","Images","User","nickname","content","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,MAAhC,QAA8C,MAA9C;AACA,SAASC,gBAAT,EAA2BC,eAA3B,EAA4CC,aAA5C,EAA2DC,eAA3D,QAAkF,mBAAlF;;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAASX,WAAf;AACA,QAAMY,EAAE,GAAGD,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEC,EAAf,CAF2B,CAEP;;AAEpB,sBACI;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,KAAK,EAAEF,IAAI,CAACG,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEH,IAAI,CAACG;AAAzB;AAAA;AAAA;AAAA;AAAA,cAD7B;AAEI,MAAA,OAAO,EAAE;AAAA;AAAmB;AACxB,cAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cADK,eAEL,QAAC,aAAD,MAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,cAFK,eAGL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cAHK,eAIL,QAAC,OAAD;AAAoB,QAAA,OAAO,eACvB,QAAC,MAAD,CAAQ,KAAR;AAAA,oBACKD,EAAE,IAAIF,IAAI,CAACI,IAAL,CAAUF,EAAV,KAAiBA,EAAvB,gBACG;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BADH,gBAKG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA,+BAUI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAVJ,SAAa,MAAb;AAAA;AAAA;AAAA;AAAA,cAJK,CAFb;AAAA,8BAoBI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqBI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASF,IAAI,CAACI,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,gBADZ;AAEI,QAAA,KAAK,EAAEL,IAAI,CAACI,IAAL,CAAUC,QAFrB;AAGI,QAAA,WAAW,EAAEL,IAAI,CAACM;AAHtB;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CArCD;;AAuCAP,QAAQ,CAACV,SAAT,GAAqB;AACjBW,EAAAA,IAAI,EAAEX,SAAS,CAACkB,KAAV,CAAgB;AAAM;AACxBL,IAAAA,EAAE,EAAEb,SAAS,CAACmB,MADI;AAElBJ,IAAAA,IAAI,EAAEf,SAAS,CAACoB,MAFE;AAGlBH,IAAAA,OAAO,EAAEjB,SAAS,CAACqB,MAHD;AAIlBC,IAAAA,SAAS,EAAEtB,SAAS,CAACoB,MAJH;AAKlBG,IAAAA,QAAQ,EAAEvB,SAAS,CAACwB,OAAV,CAAkBxB,SAAS,CAACoB,MAA5B,CALQ;AAMlBN,IAAAA,MAAM,EAAEd,SAAS,CAACwB,OAAV,CAAkBxB,SAAS,CAACoB,MAA5B;AANU,GAAhB,EAOHK;AARc,CAArB;AAWA,eAAef,QAAf","sourcesContent":["import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, Button, Popover, Avatar } from \"antd\";\r\nimport { EllipsisOutlined, MessageOutlined, HeartOutlined, RetweetOutlined } from \"@ant-design/icons\";\r\n\r\n\r\nconst PostCard = ({ post }) => {\r\n    const { me } = useSelector\r\n    const id = me?.id;  //옵셔널 체이닝\r\n\r\n    return (\r\n        <div>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images}/>}\r\n                actions={[                  //jsx에서 배열 안에 값 넣을 때는 key 필수\r\n                    <RetweetOutlined key=\"rwtweet\"/>,\r\n                    <HeartOutlined key=\"heart\"/>,\r\n                    <MessageOutlined key=\"comment\"/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id ? (\r\n                                <>\r\n                                    <Button type=\"primary\">수정</Button>\r\n                                    <Button type=\"danger\">삭제</Button>\r\n                                </>\r\n                            ) : <Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </ Popover>\r\n                ]}\r\n            >\r\n                <Image/>\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n            </Card>\r\n            {/* <CommentForm/>\r\n            <Comments /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: propTypes.shape({     //shape으로 더 자세하게 정해줄 수 있음. 하위의 object도 shape으로 또 더 자세히 써줄 수 있음.\r\n        id: propTypes.number,\r\n        User: propTypes.object,\r\n        content: propTypes.string,\r\n        createdAt: propTypes.object,\r\n        Comments: propTypes.arrayOf(propTypes.object),\r\n        Images: propTypes.arrayOf(propTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}