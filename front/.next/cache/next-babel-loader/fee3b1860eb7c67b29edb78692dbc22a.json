{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uD601\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uCF54\\uB529\\\\React-Next\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport propTypes from 'prop-types';\nimport { Form, Input, Button } from 'antd';\nimport useInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        row: 4,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"\\uC791\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"PptqMkMnW7reCXQEE7qotaIWwp0=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: propTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/김민혁/OneDrive/바탕 화면/코딩/React-Next/front/components/CommentForm.js"],"names":["React","useCallback","useSelector","propTypes","Form","Input","Button","useInput","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","console","log","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AAEA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B,MAAMC,EAAE,GAAGR,WAAW,CAAC,UAAAS,KAAK;AAAA;;AAAA,6BAAIA,KAAK,CAACC,IAAN,CAAWC,EAAf,mDAAI,eAAeH,EAAnB;AAAA,GAAN,CAAtB;;AACA,kBAA2CH,QAAQ,CAAC,EAAD,CAAnD;AAAA;AAAA,MAAOO,WAAP;AAAA,MAAoBC,mBAApB;;AACA,MAAMC,eAAe,GAAGf,WAAW,CAAC,YAAM;AACtCgB,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACH,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,6BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEF,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,GAAG,EAAE,CAAxE;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAhBD;;GAAMP,W;UACSN,W,EACgCK,Q;;;KAFzCC,W;AAkBNA,WAAW,CAACL,SAAZ,GAAwB;AACpBM,EAAAA,IAAI,EAAEN,SAAS,CAACgB,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAeZ,WAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport propTypes from 'prop-types';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const id = useSelector(state => state.user.me?.id);\r\n    const [commentText, onChangeCommentText] = useInput('');\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id, commentText);\r\n    }, [commentText]);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} row={4}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">작성</Button>\r\n                </Input.TextArea>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post: propTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}